class Solution {
public:
    int lenLongestFibSubseq(vector<int>& arr) {
        int n = arr.size(), ans = 0;
        unordered_map<int, int> idx_map;
        vector<vector<int>> dp(n, vector<int>(n, 2));
        for(int i = 2; i < n; i++){
            int l = 0, r = i - 1;
            while(l < r){
                int sum = arr[l] + arr[r];
                if(sum > arr[i]) r--;
                else if(sum < arr[i]) l++;
                else {
                    dp[r][i] = dp[l][r] + 1;
                    ans = max(ans, dp[r][i]);
                    l++;
                    r--;
                }
            }
        }
        return ans > 2 ? ans : 0;
    }
};
